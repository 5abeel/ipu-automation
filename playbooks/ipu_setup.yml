---
- name: IPU Setup - Verify Connectivity
  hosts: ole_p5
  gather_facts: yes
  tasks:
    - name: Ping all hosts
      ansible.builtin.ping:

- name: Stop idpf driver on host
  hosts: p5_host
  gather_facts: no
  tasks:
    - name: Remove idpf kernel module if loaded
      shell: if lsmod | grep -qw idpf; then rmmod idpf; fi
      ignore_errors: yes

- name: Download images on localhost
  hosts: localhost
  vars_files:
    - "../group_vars/vault.yml"
    - "../group_vars/all.yml"
  tasks:
    - name: Create temp directory for images
      tempfile:
        state: directory
        suffix: imc-config
      register: tempdir

    - name: Set image URLs and paths dynamically
      set_fact:
        saiserver_url: "{{ artifactory_base_url }}/{{ release_type }}/{{ build_release }}/{{ saiserver_image_name }}"
        imc_config_url: "{{ artifactory_base_url }}/{{ release_type }}/{{ build_release }}/{{ imc_config_image_name }}"
        saiserver_local: "{{ tempdir.path }}/{{ saiserver_image_name }}"
        imc_config_local: "{{ tempdir.path }}/{{ imc_config_image_name }}"

    - name: Download saiserver image tarball
      get_url:
        url: "{{ saiserver_url }}"
        dest: "{{ saiserver_local }}"
        url_username: "{{ ci_user }}"
        url_password: "{{ ci_token }}"

    - name: Download imc-config tarball
      get_url:
        url: "{{ imc_config_url }}"
        dest: "{{ imc_config_local }}"
        url_username: "{{ ci_user }}"
        url_password: "{{ ci_token }}"

- name: Distribute images to LP
  hosts: p5_lp
  tasks:
    - name: Ensure temp folder exists on LP
      file:
        path: "/tmp"
        state: directory
        mode: "0777"

    - name: Copy saiserver image to LP
      copy:
        src: "{{ hostvars['localhost']['saiserver_local'] }}"
        dest: /tmp/saiserver.tgz
        mode: "0644"

    - name: Copy imc-config image to LP
      copy:
        src: "{{ hostvars['localhost']['imc_config_local'] }}"
        dest: /tmp/imc-config.tgz
        mode: "0644"

- name: Distribute images to IMC via SCP from LP
  hosts: p5_imc
  tasks:
    - name: Copy saiserver image from LP to IMC using scp
      shell: scp -o StrictHostKeyChecking=no /tmp/saiserver.tgz root@100.0.0.100:/tmp/saiserver.tgz
      delegate_to: p5_lp

    - name: Copy imc-config image from LP to IMC using scp
      shell: scp -o StrictHostKeyChecking=no /tmp/imc-config.tgz root@100.0.0.100:/tmp/imc-config.tgz
      delegate_to: p5_lp

    - name: Extract saiserver.tgz on IMC
      unarchive:
        src: "/tmp/saiserver.tgz"
        dest: "{{ ansible_env.HOME }}"
        remote_src: yes

    - name: Extract imc-config tarball on IMC
      unarchive:
        src: "/tmp/imc-config.tgz"
        dest: "/"
        remote_src: yes

    - name: Copy dash.pkg to /work/scripts/p4_custom.pkg
      copy:
        src: "{{ ansible_env.HOME }}/share/dash/dash.pkg"
        dest: "/work/scripts/p4_custom.pkg"
        remote_src: yes

    - name: Calculate md5sum for /work/scripts/p4_custom.pkg
      command: md5sum /work/scripts/p4_custom.pkg
      register: imc_pkg_md5

    - name: Show dash.pkg md5sum
      debug:
        var: imc_pkg_md5.stdout

    - name: Remove previous pkg directory on ACC (via IMC)
      shell: rm -rf /opt/p4/p4sde/share/dash
      delegate_to: p5_acc

    - name: Copy saiserver image to ACC (via IMC)
      shell: scp -o StrictHostKeyChecking=no /tmp/saiserver.tgz root@192.168.0.2:/tmp/saiserver.tgz
      delegate_to: p5_imc

    - name: Extract saiserver image on ACC (via IMC)
      unarchive:
        src: "/tmp/saiserver.tgz"
        dest: "/opt/p4/p4sde"
        remote_src: yes
      delegate_to: p5_acc

    - name: Pause for manual editing before reboot of IMC
      pause:
        minutes: 5
        prompt: "You may edit files on IMC now. Continue to reboot after editing."
